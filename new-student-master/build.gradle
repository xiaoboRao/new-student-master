group 'cn.jxust.dq'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
configurations {
    mybatisGenerator
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile 'jstl:jstl:1.2'
    compile 'org.springframework:spring-aop:4.3.8.RELEASE'
    compile 'org.springframework:spring-context:4.3.8.RELEASE'
    compile 'org.springframework:spring-beans:4.3.8.RELEASE'
    compile 'org.springframework:spring-web:4.3.8.RELEASE'
    compile 'org.springframework:spring-webmvc:4.3.8.RELEASE'
    compile 'org.springframework:spring-tx:4.3.8.RELEASE'
    compile 'org.springframework:spring-jdbc:4.3.8.RELEASE'
    compile 'org.springframework:spring-test:4.3.8.RELEASE'
    compile 'mysql:mysql-connector-java:5.1.42'
    compile 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    compile 'org.mybatis:mybatis-spring:1.3.1'
    compile 'org.mybatis:mybatis:3.3.1'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.2.2'
    compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'
    compile group: 'com.alibaba.druid', name: 'druid-wrapper', version: '0.2.9'
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.4'




    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.42'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'


}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/config/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driver")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/config/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}